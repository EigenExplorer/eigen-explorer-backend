{
  "openapi": "3.0.3",
  "info": {
    "title": "EigenExplorer API",
    "description": "EigenExplorer is a community-driven data platform for EigenLayer AVS.",
    "version": "0.0.1",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    }
  },
  "servers": [
    {
      "url": "https://api.eigenexplorer.com",
      "description": "EigenExplorer Production API"
    }
  ],
  "paths": {
    "/version": {
      "get": {
        "operationId": "getVersion",
        "summary": "Retrieve API server version",
        "description": "Returns API server version.",
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "The API server version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "The version of the API server",
                      "example": "v0.0.1"
                    }
                  },
                  "required": [
                    "version"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "getHealth",
        "summary": "Retrieve API server status",
        "description": "Returns API server status.",
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "The API server status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the API server",
                      "example": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "operationId": "getAllMetrics",
        "summary": "Retrieve summary metrics",
        "description": "Returns summary metrics, including TVLs for both restaking strategies and the Beacon Chain ETH strategy, as well as the total number of AVS, operators, and stakers.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The list of summary metrics.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tvl": {
                      "type": "number",
                      "description": "The total value locked (TVL) in ETH in the EigenLayer ecosystem",
                      "example": 1000000
                    },
                    "tvlBeaconChain": {
                      "type": "number",
                      "description": "The total value locked (TVL) in ETH in the beacon chain ETH strategy",
                      "example": 1000000
                    },
                    "tvlRestaking": {
                      "type": "number",
                      "description": "The total value locked (TVL) in ETH in all restaking strategies",
                      "example": 1000000
                    },
                    "tvlStrategies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number",
                        "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                        "example": 1000000
                      },
                      "description": "The total value locked (TVL) in each restaking strategy, denominated in the strategy's native token",
                      "example": {
                        "cbETH": 1000000,
                        "stETH": 2000000
                      }
                    },
                    "tvlStrategiesEth": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number",
                        "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                        "example": 1000000
                      },
                      "description": "The total value locked (TVL) in each restaking strategy, denominated in ETH",
                      "example": {
                        "cbETH": 1000000,
                        "stETH": 2000000
                      }
                    },
                    "totalAVS": {
                      "type": "number",
                      "description": "The total number of AVS",
                      "example": 10
                    },
                    "totalOperators": {
                      "type": "number",
                      "description": "The total number of AVS operators",
                      "example": 10
                    },
                    "totalStakers": {
                      "type": "number",
                      "description": "The total number of AVS stakers",
                      "example": 10
                    }
                  },
                  "required": [
                    "tvl",
                    "tvlBeaconChain",
                    "tvlRestaking",
                    "tvlStrategies",
                    "tvlStrategiesEth",
                    "totalAVS",
                    "totalOperators",
                    "totalStakers"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/tvl": {
      "get": {
        "operationId": "getTvlMetrics",
        "summary": "Retrieve total TVL",
        "description": "Returns the total value locked (TVL) in all restaking strategies and Beacon Chain restaking.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The value of the combined TVL in ETH.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tvl": {
                      "type": "number",
                      "description": "The value of the combined TVL in ETH",
                      "example": 1000000
                    }
                  },
                  "required": [
                    "tvl"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/tvl/beacon-chain": {
      "get": {
        "operationId": "getBeaconChainTvlMetric",
        "summary": "Retrieve Beacon Chain restaking TVL",
        "description": "Returns the total value locked (TVL) in the Beacon Chain restaking EigenPods.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The value of the Beacon Chain restaking TVL in ETH.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tvl": {
                      "type": "number",
                      "description": "The value of the Beacon Chain restaking TVL in ETH",
                      "example": 1000000
                    }
                  },
                  "required": [
                    "tvl"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/tvl/restaking": {
      "get": {
        "operationId": "getRestakingTvlMetrics",
        "summary": "Retrieve restaking strategies TVL",
        "description": "Returns the combined total value locked (TVL) across all restaking strategies, along with a breakdown of the TVL for each individual strategy.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The value of combined restaking strategy TVL and a breakdown of the TVL for each individual strategy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tvl": {
                      "type": "number",
                      "description": "The value of the combined restaking strategy TVL in ETH",
                      "example": 1000000
                    },
                    "tvlStrategies": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number",
                        "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                        "example": 1000000
                      },
                      "description": "The total value locked (TVL) in each restaking strategy, denominated in the strategy's native token",
                      "example": {
                        "cbETH": 1000000,
                        "stETH": 2000000
                      }
                    },
                    "tvlStrategiesEth": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number",
                        "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                        "example": 1000000
                      },
                      "description": "The total value locked (TVL) in each restaking strategy, denominated in ETH",
                      "example": {
                        "cbETH": 1000000,
                        "stETH": 2000000
                      }
                    }
                  },
                  "required": [
                    "tvl",
                    "tvlStrategies",
                    "tvlStrategiesEth"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/tvl/restaking/{strategy}": {
      "get": {
        "operationId": "getTvlRestakingMetricByStrategy",
        "summary": "Retrieve a strategy TVL by name",
        "description": "Returns the total value locked (TVL) in a specific LST strategy.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "strategy",
            "description": "The name of the restaking strategy",
            "schema": {
              "type": "string",
              "description": "The name of the restaking strategy",
              "example": "cbETH"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The value of combined restaking strategy TVL and a breakdown of the TVL for each individual strategy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tvl": {
                      "type": "number",
                      "description": "The value of the restaking strategy TVL, denominated in the strategy's native token",
                      "example": 1000000
                    },
                    "tvlEth": {
                      "type": "number",
                      "description": "The value of the restaking strategy TVL, denominated in Eth",
                      "example": 1000000
                    }
                  },
                  "required": [
                    "tvl",
                    "tvlEth"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/total-avs": {
      "get": {
        "operationId": "getTotalAvsMetric",
        "summary": "Retrieve total number of AVS",
        "description": "Returns the total number of AVS registered.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The total number of AVS registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "The total number of AVS registered",
                      "example": 1000000
                    },
                    "change24h": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "example": 10
                        },
                        "percent": {
                          "type": "number",
                          "example": 0.01
                        }
                      },
                      "required": [
                        "value",
                        "percent"
                      ]
                    },
                    "change7d": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "example": 10
                        },
                        "percent": {
                          "type": "number",
                          "example": 0.01
                        }
                      },
                      "required": [
                        "value",
                        "percent"
                      ]
                    }
                  },
                  "required": [
                    "total",
                    "change24h",
                    "change7d"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/total-operators": {
      "get": {
        "operationId": "getTotalOperatorsMetric",
        "summary": "Retrieve total number of AVS operators",
        "description": "Returns the total number of AVS operators registered.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The total number of AVS operators registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "The total number of AVS operators registered",
                      "example": 1000000
                    },
                    "change24h": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "example": 10
                        },
                        "percent": {
                          "type": "number",
                          "example": 0.01
                        }
                      },
                      "required": [
                        "value",
                        "percent"
                      ]
                    },
                    "change7d": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "example": 10
                        },
                        "percent": {
                          "type": "number",
                          "example": 0.01
                        }
                      },
                      "required": [
                        "value",
                        "percent"
                      ]
                    }
                  },
                  "required": [
                    "total",
                    "change24h",
                    "change7d"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/total-stakers": {
      "get": {
        "operationId": "getTotalStakerssMetric",
        "summary": "Retrieve total number of AVS stakers",
        "description": "Returns the total number of AVS stakers registered.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The total number of AVS stakers registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "The total number of AVS stakers registered",
                      "example": 1000000
                    },
                    "change24h": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "example": 10
                        },
                        "percent": {
                          "type": "number",
                          "example": 0.01
                        }
                      },
                      "required": [
                        "value",
                        "percent"
                      ]
                    },
                    "change7d": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "number",
                          "example": 10
                        },
                        "percent": {
                          "type": "number",
                          "example": 0.01
                        }
                      },
                      "required": [
                        "value",
                        "percent"
                      ]
                    }
                  },
                  "required": [
                    "total",
                    "change24h",
                    "change7d"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/total-withdrawals": {
      "get": {
        "operationId": "getTotalWithdrawals",
        "summary": "Retrieve total number of withdrawals ",
        "description": "Returns the total number of withdrawals.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The total number of withdrawals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "The total number of withdrawals",
                      "example": 1000000
                    },
                    "pending": {
                      "type": "number",
                      "description": "The  pending number of withdrawals",
                      "example": 1000000
                    },
                    "completed": {
                      "type": "number",
                      "description": "The completed number of withdrawals",
                      "example": 1000000
                    }
                  },
                  "required": [
                    "total",
                    "pending",
                    "completed"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/total-deposits": {
      "get": {
        "operationId": "getTotalDeposits",
        "summary": "Retrieve total number of deposits",
        "description": "Returns the total number of deposits.",
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "The total number of deposits.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "description": "The total number of deposits",
                      "example": 1000000
                    }
                  },
                  "required": [
                    "total"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/avs/{address}": {
      "get": {
        "operationId": "getHistoricalAvsAggregate",
        "summary": "Retrieve historical AVS aggregate data",
        "description": "Returns historical aggregate data for an AVS including TVL, total number of stakers, and total number of operators at specified timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the AVS ",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the AVS ",
              "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The historical aggregate data for an AVS including TVL, total number of stakers, and total number of operators at specified timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the recorded data point",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "tvlEth": {
                            "type": "number",
                            "description": "The total value locked (TVL) in ETH at the timestamp",
                            "example": 10
                          },
                          "totalStakers": {
                            "type": "number",
                            "description": "The total number of stakers at the timestamp",
                            "example": 10
                          },
                          "totalOperators": {
                            "type": "number",
                            "description": "The total number of operators at the timestamp",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "tvlEth",
                          "totalStakers",
                          "totalOperators"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/operators/{address}": {
      "get": {
        "operationId": "getHistoricalOperatorsAggregate",
        "summary": "Retrieve historical operator aggregate data",
        "description": "Returns historical aggregate data for an operator including TVL and total number of stakers at specified timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the operator",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the operator",
              "example": "0x00107cfdeaddc0a3160ed2f6fedd627f313e7b1a"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The historical aggregate data for an operator including TVL and total number of stakers at specified timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the recorded data point",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "tvlEth": {
                            "type": "number",
                            "description": "The total value locked (TVL) in ETH at the timestamp",
                            "example": 10
                          },
                          "totalStakers": {
                            "type": "number",
                            "description": "The total number of stakers at the timestamp",
                            "example": 10
                          },
                          "totalAvs": {
                            "type": "number",
                            "description": "The total number of AVS at the timestamp",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "tvlEth",
                          "totalStakers",
                          "totalAvs"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/tvl": {
      "get": {
        "operationId": "getHistoricalTvl",
        "summary": "Retrieve historical total TVL data.",
        "description": "Returns the historical total value locked (TVL) data over specified timestamp values in all restaking strategies and Beacon Chain restaking.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The historical data of combined TVL over specified timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding TVL value ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "tvlEth": {
                            "type": "number",
                            "description": "The value of the combined TVL in ETH",
                            "example": 1000000
                          }
                        },
                        "required": [
                          "timestamp",
                          "tvlEth"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/tvl/beacon-chain": {
      "get": {
        "operationId": "getHistoricalTvlBeaconChain",
        "summary": "Retrieve historical Beacon Chain restaking TVL",
        "description": "Returns the historical total value locked (TVL) in the Beacon Chain restaking EigenPods.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The historical data of Beacon Chain restaking TVL in ETH over specified timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding Beacon Chain TVL value ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "tvlEth": {
                            "type": "number",
                            "description": "The value of the Beacon Chain restaking TVL in ETH",
                            "example": 1000000
                          }
                        },
                        "required": [
                          "timestamp",
                          "tvlEth"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/tvl/restaking/{address}": {
      "get": {
        "operationId": "getHistoricalTvlRestaking",
        "summary": "Retrieve historical TVL data by strategy address.",
        "description": "Returns the historical total value locked (TVL) data over specified timestamp values in a specific LST strategy.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the Strategy",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the Strategy",
              "example": "0xacb55c530acdb2849e6d4f36992cd8c9d50ed8f7"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The historical data of TVL for the specified strategy over specified timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding Beacon Chain TVL value ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "tvlEth": {
                            "type": "number",
                            "description": "The value of the restaking strategy TVL, denominated in ETH",
                            "example": 1000000
                          }
                        },
                        "required": [
                          "timestamp",
                          "tvlEth"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/withdrawals": {
      "get": {
        "operationId": "getHistoricalWithdrawalsAggregate",
        "summary": "Retrieve historical withdrawal aggregate data",
        "description": "Returns historical aggregate data for withdrawals, including total value locked (TVL) in ETH at specified timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The historical aggregate data for withdrawals, including total value locked (TVL) in ETH at specified timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the recorded data point",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "tvlEth": {
                            "type": "number",
                            "description": "The total value locked (TVL) in ETH at the timestamp",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "tvlEth"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/deposits": {
      "get": {
        "operationId": "getHistoricalDepositsAggregate",
        "summary": "Retrieve historical deposit aggregate data",
        "description": "Returns historical aggregate data for deposits, including total value locked (TVL) in ETH at specified timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The historical aggregate data for deposits, including total value locked (TVL) in ETH at specified timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the recorded data point",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "tvlEth": {
                            "type": "number",
                            "description": "The total value locked (TVL) in ETH at the timestamp",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "tvlEth"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/count-avs": {
      "get": {
        "operationId": "getHistoricalAvsCount",
        "summary": "Retrieve historical count of AVS",
        "description": "Returns the total number of AVS registered at timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The  total number of AVS registered at timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding AVS count ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "value": {
                            "type": "number",
                            "description": "The total number of AVS registered ",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/count-operators": {
      "get": {
        "operationId": "getHistoricalOperatorCount",
        "summary": "Retrieve historical count of AVS operators",
        "description": "Returns the total number of AVS operators registered at timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total number of AVS operators registered at timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding AVS operators count ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "value": {
                            "type": "number",
                            "description": "The total number of AVS operators registered ",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/count-stakers": {
      "get": {
        "operationId": "getHistoricalStakerCount",
        "summary": "Retrieve historical count of AVS stakers",
        "description": "Returns the total number of AVS stakers registered at timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total number of AVS stakers registered at timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding AVS stakers count ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "value": {
                            "type": "number",
                            "description": "The total number of AVS stakers registered ",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/count-withdrawals": {
      "get": {
        "operationId": "getHistoricalWithdrawalCount",
        "summary": "Retrieve historical count of AVS withdrawals",
        "description": "Returns the total number of AVS withdrawals made at timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total number of AVS withdrawals made at timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding AVS withdrawals count ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "value": {
                            "type": "number",
                            "description": "The total number of AVS withdrawals made",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/metrics/historical/count-deposits": {
      "get": {
        "operationId": "getHistoricalDepositCount",
        "summary": "Retrieve historical count of AVS deposits",
        "description": "Returns the total number of AVS deposits made at timestamp values.",
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "frequency",
            "description": "Frequency of data points",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "1d",
                "7d"
              ],
              "default": "1h",
              "description": "Frequency of data points",
              "example": "1h"
            }
          },
          {
            "in": "query",
            "name": "variant",
            "description": "Type of tally, discrete or cumulative",
            "schema": {
              "type": "string",
              "enum": [
                "discrete",
                "cumulative"
              ],
              "default": "cumulative",
              "description": "Type of tally, discrete or cumulative",
              "example": "cumulative"
            }
          },
          {
            "in": "query",
            "name": "startAt",
            "description": "Start date in ISO string format",
            "schema": {
              "type": "string",
              "description": "Start date in ISO string format",
              "default": "",
              "example": "2024-04-11T08:31:11.000"
            }
          },
          {
            "in": "query",
            "name": "endAt",
            "description": "End date in ISO string format",
            "schema": {
              "type": "string",
              "description": "End date in ISO string format",
              "default": "",
              "example": "2024-04-12T08:31:11.000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total number of AVS deposits made at timestamp values.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The time stamp for the corresponding AVS deposits count ",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "value": {
                            "type": "number",
                            "description": "The total number of AVS deposits made ",
                            "example": 10
                          }
                        },
                        "required": [
                          "timestamp",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs": {
      "get": {
        "operationId": "getAllAvs",
        "summary": "Retrieve all AVS",
        "description": "Returns all AVS records. This endpoint supports pagination.",
        "tags": [
          "AVS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          },
          {
            "in": "query",
            "name": "withCuratedMetadata",
            "description": "Toggle whether the route should send curated metadata",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should send curated metadata",
              "example": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of AVS records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "AVS service manager contract address",
                            "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                          },
                          "metadataName": {
                            "type": "string",
                            "description": "The name of the AVS",
                            "example": "Example AVS"
                          },
                          "metadataDescription": {
                            "type": "string",
                            "nullable": true,
                            "description": "The description of the AVS",
                            "example": "This is an example AVS"
                          },
                          "metadataDiscord": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS's Discord server",
                            "example": "https://discord.com/invite/abcdefghij"
                          },
                          "metadataLogo": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS's logo"
                          },
                          "metadataTelegram": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS's Telegram channel",
                            "example": "https://t.me/acme"
                          },
                          "metadataWebsite": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS's website",
                            "example": "https://acme.com"
                          },
                          "metadataX": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS's X",
                            "example": "https://twitter.com/acme"
                          },
                          "restakeableStrategies": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{40}$"
                            },
                            "description": "The list of supported restaking strategies",
                            "example": [
                              "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                            ]
                          },
                          "createdAtBlock": {
                            "type": "string",
                            "description": "The block number at which the AVS was created",
                            "example": "19631203"
                          },
                          "updatedAtBlock": {
                            "type": "string",
                            "description": "The block number at which the AVS was last updated",
                            "example": "19631203"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp at which the AVS was created",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp at which the AVS was last updated",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The strategy shares held in the AVS",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "135064894598947935263152"
                              },
                              {
                                "strategyAddress": "0x54945180db7943c0ed0fee7edab2bd24620256bc",
                                "shares": "9323641881708650182301"
                              }
                            ]
                          },
                          "totalOperators": {
                            "type": "number",
                            "description": "The total number of operators operating the AVS",
                            "example": 10
                          },
                          "totalStakers": {
                            "type": "number",
                            "description": "The total number of stakers staking in the AVS",
                            "example": 10
                          },
                          "curatedMetadata": {
                            "type": "object",
                            "properties": {
                              "metadataName": {
                                "type": "string",
                                "description": "The name of the AVS",
                                "example": "Example AVS"
                              },
                              "metadataDescription": {
                                "type": "string",
                                "nullable": true,
                                "description": "The description of the AVS",
                                "example": "This is an example AVS"
                              },
                              "metadataDiscord": {
                                "type": "string",
                                "nullable": true,
                                "format": "uri",
                                "description": "The URL of the AVS's Discord server",
                                "example": "https://discord.com/invite/abcdefghij"
                              },
                              "metadataLogo": {
                                "type": "string",
                                "nullable": true,
                                "format": "uri",
                                "description": "The URL of the AVS's logo"
                              },
                              "metadataTelegram": {
                                "type": "string",
                                "nullable": true,
                                "format": "uri",
                                "description": "The URL of the AVS's Telegram channel",
                                "example": "https://t.me/acme"
                              },
                              "metadataWebsite": {
                                "type": "string",
                                "nullable": true,
                                "format": "uri",
                                "description": "The URL of the AVS's website",
                                "example": "https://acme.com"
                              },
                              "metadataX": {
                                "type": "string",
                                "nullable": true,
                                "format": "uri",
                                "description": "The URL of the AVS's X",
                                "example": "https://twitter.com/acme"
                              },
                              "avsAddress": {
                                "type": "string",
                                "pattern": "^0x[a-fA-F0-9]{40}$",
                                "description": "AVS service manager contract address",
                                "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Tags to describe the AVS",
                                "example": [
                                  "Example tag 1",
                                  "Example tag 2"
                                ]
                              },
                              "isVisible": {
                                "type": "boolean",
                                "description": "Indicates if AVS visibility is allowed",
                                "example": false
                              },
                              "isVerified": {
                                "type": "boolean",
                                "description": "Indicates if the AVS has been verified by the EigenExplorer team",
                                "example": false
                              }
                            },
                            "required": [
                              "metadataName",
                              "metadataDescription",
                              "metadataDiscord",
                              "metadataLogo",
                              "metadataTelegram",
                              "metadataWebsite",
                              "metadataX",
                              "avsAddress",
                              "tags",
                              "isVisible",
                              "isVerified"
                            ],
                            "description": "To curate visibility and additional information of the AVS ",
                            "example": {
                              "avsAddress": "0x2344c0fe02ccd2b32155ca0ffcb1978a6d96a552",
                              "metadataName": "Example AVS",
                              "metadataDescription": "This is an example AVS",
                              "metadataDiscord": "https://discord.com/invite/abcdefghij",
                              "metadataLogo": "The URL of the AVS's logo",
                              "metadataTelegram": "The URL of the AVS's Telegram channel",
                              "metadataWebsite": "https://acme.com",
                              "metadataX": "https://twitter.com/acme",
                              "tags": [
                                "Example tag 1",
                                "Example tag 2"
                              ],
                              "isVisible": true,
                              "isVerified": true
                            }
                          },
                          "tvl": {
                            "type": "object",
                            "properties": {
                              "tvl": {
                                "type": "number",
                                "description": "The combined TVL of all restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlBeaconChain": {
                                "type": "number",
                                "description": "The TVL of Beacon Chain restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlRestaking": {
                                "type": "number",
                                "description": "The combined TVL of all liquid restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlWETH": {
                                "type": "number",
                                "description": "The TVL of WETH restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlStrategies": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in its native token",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              },
                              "tvlStrategiesEth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in ETH",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              }
                            },
                            "required": [
                              "tvl",
                              "tvlBeaconChain",
                              "tvlRestaking",
                              "tvlWETH",
                              "tvlStrategies",
                              "tvlStrategiesEth"
                            ],
                            "description": "The total value locked (TVL) in the AVS",
                            "example": {
                              "tvl": 1000000,
                              "tvlBeaconChain": 1000000,
                              "tvlWETH": 1000000,
                              "tvlRestaking": 1000000,
                              "tvlStrategies": {
                                "Eigen": 1000000,
                                "cbETH": 2000000
                              },
                              "tvlStrategiesEth": {
                                "stETH": 1000000,
                                "cbETH": 2000000
                              }
                            }
                          }
                        },
                        "required": [
                          "address",
                          "metadataName",
                          "metadataDescription",
                          "metadataDiscord",
                          "metadataLogo",
                          "metadataTelegram",
                          "metadataWebsite",
                          "metadataX",
                          "restakeableStrategies",
                          "createdAtBlock",
                          "updatedAtBlock",
                          "createdAt",
                          "updatedAt",
                          "shares",
                          "totalOperators",
                          "totalStakers"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs/addresses": {
      "get": {
        "operationId": "getAllAvsAddresses",
        "summary": "Retrieve all AVS addresses",
        "description": "Returns a list of all AVS addresses. This page supports pagination.",
        "tags": [
          "AVS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of AVS addresses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The AVS's name",
                            "example": "Example AVS"
                          },
                          "address": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "AVS service manager contract address",
                            "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                          }
                        },
                        "required": [
                          "name",
                          "address"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs/{address}": {
      "get": {
        "operationId": "getAvsByAddress",
        "summary": "Retrieve an AVS by address",
        "description": "Returns a single AVS record by address.",
        "tags": [
          "AVS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the AVS ",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the AVS ",
              "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          },
          {
            "in": "query",
            "name": "withCuratedMetadata",
            "description": "Toggle whether the route should send curated metadata",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should send curated metadata",
              "example": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The AVS record found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "description": "AVS service manager contract address",
                      "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                    },
                    "metadataName": {
                      "type": "string",
                      "description": "The name of the AVS",
                      "example": "Example AVS"
                    },
                    "metadataDescription": {
                      "type": "string",
                      "nullable": true,
                      "description": "The description of the AVS",
                      "example": "This is an example AVS"
                    },
                    "metadataDiscord": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS's Discord server",
                      "example": "https://discord.com/invite/abcdefghij"
                    },
                    "metadataLogo": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS's logo"
                    },
                    "metadataTelegram": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS's Telegram channel",
                      "example": "https://t.me/acme"
                    },
                    "metadataWebsite": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS's website",
                      "example": "https://acme.com"
                    },
                    "metadataX": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS's X",
                      "example": "https://twitter.com/acme"
                    },
                    "restakeableStrategies": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{40}$"
                      },
                      "description": "The list of supported restaking strategies",
                      "example": [
                        "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                      ]
                    },
                    "createdAtBlock": {
                      "type": "string",
                      "description": "The block number at which the AVS was created",
                      "example": "19631203"
                    },
                    "updatedAtBlock": {
                      "type": "string",
                      "description": "The block number at which the AVS was last updated",
                      "example": "19631203"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The time stamp at which the AVS was created",
                      "example": "2024-04-11T08:31:11.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The time stamp at which the AVS was last updated",
                      "example": "2024-04-11T08:31:11.000Z"
                    },
                    "shares": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategyAddress": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the restaking strategy",
                            "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                          },
                          "shares": {
                            "type": "string",
                            "description": "The amount of shares held in the strategy",
                            "example": "1277920000000000000000000"
                          }
                        },
                        "required": [
                          "strategyAddress",
                          "shares"
                        ]
                      },
                      "description": "The strategy shares held in the AVS",
                      "example": [
                        {
                          "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                          "shares": "135064894598947935263152"
                        },
                        {
                          "strategyAddress": "0x54945180db7943c0ed0fee7edab2bd24620256bc",
                          "shares": "9323641881708650182301"
                        }
                      ]
                    },
                    "totalOperators": {
                      "type": "number",
                      "description": "The total number of operators operating the AVS",
                      "example": 10
                    },
                    "totalStakers": {
                      "type": "number",
                      "description": "The total number of stakers staking in the AVS",
                      "example": 10
                    },
                    "curatedMetadata": {
                      "type": "object",
                      "properties": {
                        "metadataName": {
                          "type": "string",
                          "description": "The name of the AVS",
                          "example": "Example AVS"
                        },
                        "metadataDescription": {
                          "type": "string",
                          "nullable": true,
                          "description": "The description of the AVS",
                          "example": "This is an example AVS"
                        },
                        "metadataDiscord": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "The URL of the AVS's Discord server",
                          "example": "https://discord.com/invite/abcdefghij"
                        },
                        "metadataLogo": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "The URL of the AVS's logo"
                        },
                        "metadataTelegram": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "The URL of the AVS's Telegram channel",
                          "example": "https://t.me/acme"
                        },
                        "metadataWebsite": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "The URL of the AVS's website",
                          "example": "https://acme.com"
                        },
                        "metadataX": {
                          "type": "string",
                          "nullable": true,
                          "format": "uri",
                          "description": "The URL of the AVS's X",
                          "example": "https://twitter.com/acme"
                        },
                        "avsAddress": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$",
                          "description": "AVS service manager contract address",
                          "example": "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Tags to describe the AVS",
                          "example": [
                            "Example tag 1",
                            "Example tag 2"
                          ]
                        },
                        "isVisible": {
                          "type": "boolean",
                          "description": "Indicates if AVS visibility is allowed",
                          "example": false
                        },
                        "isVerified": {
                          "type": "boolean",
                          "description": "Indicates if the AVS has been verified by the EigenExplorer team",
                          "example": false
                        }
                      },
                      "required": [
                        "metadataName",
                        "metadataDescription",
                        "metadataDiscord",
                        "metadataLogo",
                        "metadataTelegram",
                        "metadataWebsite",
                        "metadataX",
                        "avsAddress",
                        "tags",
                        "isVisible",
                        "isVerified"
                      ],
                      "description": "To curate visibility and additional information of the AVS ",
                      "example": {
                        "avsAddress": "0x2344c0fe02ccd2b32155ca0ffcb1978a6d96a552",
                        "metadataName": "Example AVS",
                        "metadataDescription": "This is an example AVS",
                        "metadataDiscord": "https://discord.com/invite/abcdefghij",
                        "metadataLogo": "The URL of the AVS's logo",
                        "metadataTelegram": "The URL of the AVS's Telegram channel",
                        "metadataWebsite": "https://acme.com",
                        "metadataX": "https://twitter.com/acme",
                        "tags": [
                          "Example tag 1",
                          "Example tag 2"
                        ],
                        "isVisible": true,
                        "isVerified": true
                      }
                    },
                    "tvl": {
                      "type": "object",
                      "properties": {
                        "tvl": {
                          "type": "number",
                          "description": "The combined TVL of all restaking strategies in ETH",
                          "example": 1000000
                        },
                        "tvlBeaconChain": {
                          "type": "number",
                          "description": "The TVL of Beacon Chain restaking strategy in ETH",
                          "example": 1000000
                        },
                        "tvlRestaking": {
                          "type": "number",
                          "description": "The combined TVL of all liquid restaking strategies in ETH",
                          "example": 1000000
                        },
                        "tvlWETH": {
                          "type": "number",
                          "description": "The TVL of WETH restaking strategy in ETH",
                          "example": 1000000
                        },
                        "tvlStrategies": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number",
                            "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                            "example": 1000000
                          },
                          "description": "The TVL of each individual restaking strategy in its native token",
                          "example": {
                            "Eigen": 1000000,
                            "cbETH": 2000000
                          }
                        },
                        "tvlStrategiesEth": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number",
                            "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                            "example": 1000000
                          },
                          "description": "The TVL of each individual restaking strategy in ETH",
                          "example": {
                            "Eigen": 1000000,
                            "cbETH": 2000000
                          }
                        }
                      },
                      "required": [
                        "tvl",
                        "tvlBeaconChain",
                        "tvlRestaking",
                        "tvlWETH",
                        "tvlStrategies",
                        "tvlStrategiesEth"
                      ],
                      "description": "The total value locked (TVL) in the AVS",
                      "example": {
                        "tvl": 1000000,
                        "tvlBeaconChain": 1000000,
                        "tvlWETH": 1000000,
                        "tvlRestaking": 1000000,
                        "tvlStrategies": {
                          "Eigen": 1000000,
                          "cbETH": 2000000
                        },
                        "tvlStrategiesEth": {
                          "stETH": 1000000,
                          "cbETH": 2000000
                        }
                      }
                    }
                  },
                  "required": [
                    "address",
                    "metadataName",
                    "metadataDescription",
                    "metadataDiscord",
                    "metadataLogo",
                    "metadataTelegram",
                    "metadataWebsite",
                    "metadataX",
                    "restakeableStrategies",
                    "createdAtBlock",
                    "updatedAtBlock",
                    "createdAt",
                    "updatedAt",
                    "shares",
                    "totalOperators",
                    "totalStakers"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs/{address}/stakers": {
      "get": {
        "operationId": "getAvsStakersByAddress",
        "summary": "Retrieve all stakers for a given AVS address",
        "description": "Returns all stakers for a given AVS address. This endpoint supports pagination.",
        "tags": [
          "AVS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the AVS ",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the AVS ",
              "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The stakers record found for the AVS.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the staker",
                            "example": "0x0000006c21964af0d420af8992851a30fa13a68b"
                          },
                          "operatorAddress": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The address of the operator",
                            "example": "0x71c6f7ed8c2d4925d0baf16f6a85bb1736d412eb"
                          },
                          "createdAtBlock": {
                            "type": "string",
                            "description": "The block number at which the Staker made first delegation",
                            "example": "19631203"
                          },
                          "updatedAtBlock": {
                            "type": "string",
                            "description": "The block number at which the Staker made last delegation",
                            "example": "19631203"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp at which the Staker made first delegation",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp at which the Staker made last delegation",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564a"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "40888428658906049"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            }
                          },
                          "tvl": {
                            "type": "object",
                            "properties": {
                              "tvl": {
                                "type": "number",
                                "description": "The combined TVL of all restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlBeaconChain": {
                                "type": "number",
                                "description": "The TVL of Beacon Chain restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlRestaking": {
                                "type": "number",
                                "description": "The combined TVL of all liquid restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlWETH": {
                                "type": "number",
                                "description": "The TVL of WETH restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlStrategies": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in its native token",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              },
                              "tvlStrategiesEth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in ETH",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              }
                            },
                            "required": [
                              "tvl",
                              "tvlBeaconChain",
                              "tvlRestaking",
                              "tvlWETH",
                              "tvlStrategies",
                              "tvlStrategiesEth"
                            ],
                            "description": "The total value locked (TVL) in the AVS staker",
                            "example": {
                              "tvl": 1000000,
                              "tvlBeaconChain": 1000000,
                              "tvlWETH": 1000000,
                              "tvlRestaking": 1000000,
                              "tvlStrategies": {
                                "Eigen": 1000000,
                                "cbETH": 2000000
                              },
                              "tvlStrategiesEth": {
                                "stETH": 1000000,
                                "cbETH": 2000000
                              }
                            }
                          }
                        },
                        "required": [
                          "address",
                          "operatorAddress",
                          "createdAtBlock",
                          "updatedAtBlock",
                          "createdAt",
                          "updatedAt",
                          "shares"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/avs/{address}/operators": {
      "get": {
        "operationId": "getAvsOperatorsByAddress",
        "summary": "Retrieve all operators for a given AVS address",
        "description": "Returns all operators for a given AVS address. This endpoint supports pagination.",
        "tags": [
          "AVS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the AVS ",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the AVS ",
              "example": "0x870679e138bcdf293b7ff14dd44b70fc97e12fc0"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operators record found for the AVS.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the AVS operator",
                            "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                          },
                          "metadataName": {
                            "type": "string",
                            "description": "The name of the AVS operator",
                            "example": "Example AVS Operator"
                          },
                          "metadataDescription": {
                            "type": "string",
                            "nullable": true,
                            "description": "The description of the AVS operator",
                            "example": "This is an example AVS operator"
                          },
                          "metadataDiscord": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's Discord server",
                            "example": "https://discord.com/invite/abcdefghij"
                          },
                          "metadataLogo": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's logo"
                          },
                          "metadataTelegram": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's Telegram channel",
                            "example": "https://t.me/acme"
                          },
                          "metadataWebsite": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's website",
                            "example": "https://acme.com"
                          },
                          "metadataX": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's X",
                            "example": "https://twitter.com/acme"
                          },
                          "createdAtBlock": {
                            "type": "string",
                            "description": "The block number at which the AVS Operator was registered",
                            "example": "19631203"
                          },
                          "updatedAtBlock": {
                            "type": "string",
                            "description": "The block number at which the AVS Operator registration was last updated",
                            "example": "19631203"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp at which the AVS Operator was registered",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp at which the AVS Operator registration was last updated",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The strategy shares held in the AVS operator",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "135064894598947935263152"
                              },
                              {
                                "strategyAddress": "0x54945180db7943c0ed0fee7edab2bd24620256bc",
                                "shares": "9323641881708650182301"
                              }
                            ]
                          },
                          "restakedStrategies": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{40}$"
                            },
                            "description": "The list of restaked strategies",
                            "example": [
                              "0x35f4f28a8d3ff20eed10e087e8f96ea2641e6aa1"
                            ]
                          },
                          "totalStakers": {
                            "type": "number",
                            "description": "The total number of stakers who have delegated to this AVS operator",
                            "example": 10
                          },
                          "tvl": {
                            "type": "object",
                            "properties": {
                              "tvl": {
                                "type": "number",
                                "description": "The combined TVL of all restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlBeaconChain": {
                                "type": "number",
                                "description": "The TVL of Beacon Chain restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlRestaking": {
                                "type": "number",
                                "description": "The combined TVL of all liquid restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlWETH": {
                                "type": "number",
                                "description": "The TVL of WETH restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlStrategies": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in its native token",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              },
                              "tvlStrategiesEth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in ETH",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              }
                            },
                            "required": [
                              "tvl",
                              "tvlBeaconChain",
                              "tvlRestaking",
                              "tvlWETH",
                              "tvlStrategies",
                              "tvlStrategiesEth"
                            ],
                            "description": "The total value locked (TVL) in the AVS operator",
                            "example": {
                              "tvl": 1000000,
                              "tvlBeaconChain": 1000000,
                              "tvlWETH": 1000000,
                              "tvlRestaking": 1000000,
                              "tvlStrategies": {
                                "Eigen": 1000000,
                                "cbETH": 2000000
                              },
                              "tvlStrategiesEth": {
                                "stETH": 1000000,
                                "cbETH": 2000000
                              }
                            }
                          }
                        },
                        "required": [
                          "address",
                          "metadataName",
                          "metadataDescription",
                          "metadataDiscord",
                          "metadataLogo",
                          "metadataTelegram",
                          "metadataWebsite",
                          "metadataX",
                          "createdAtBlock",
                          "updatedAtBlock",
                          "createdAt",
                          "updatedAt",
                          "shares",
                          "restakedStrategies",
                          "totalStakers"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/operators": {
      "get": {
        "operationId": "getAllOperators",
        "summary": "Retrieve all operators",
        "description": "Returns all operator records. This endpoint supports pagination.",
        "tags": [
          "Operators"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of operator records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the AVS operator",
                            "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                          },
                          "metadataName": {
                            "type": "string",
                            "description": "The name of the AVS operator",
                            "example": "Example AVS Operator"
                          },
                          "metadataDescription": {
                            "type": "string",
                            "nullable": true,
                            "description": "The description of the AVS operator",
                            "example": "This is an example AVS operator"
                          },
                          "metadataDiscord": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's Discord server",
                            "example": "https://discord.com/invite/abcdefghij"
                          },
                          "metadataLogo": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's logo"
                          },
                          "metadataTelegram": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's Telegram channel",
                            "example": "https://t.me/acme"
                          },
                          "metadataWebsite": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's website",
                            "example": "https://acme.com"
                          },
                          "metadataX": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "description": "The URL of the AVS operator's X",
                            "example": "https://twitter.com/acme"
                          },
                          "createdAtBlock": {
                            "type": "string",
                            "description": "The block number at which the AVS Operator was registered",
                            "example": "19631203"
                          },
                          "updatedAtBlock": {
                            "type": "string",
                            "description": "The block number at which the AVS Operator registration was last updated",
                            "example": "19631203"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp at which the AVS Operator was registered",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp at which the AVS Operator registration was last updated",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The strategy shares held in the AVS operator",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "135064894598947935263152"
                              },
                              {
                                "strategyAddress": "0x54945180db7943c0ed0fee7edab2bd24620256bc",
                                "shares": "9323641881708650182301"
                              }
                            ]
                          },
                          "totalStakers": {
                            "type": "number",
                            "description": "The total number of stakers who have delegated to this AVS operator",
                            "example": 10
                          },
                          "totalAvs": {
                            "type": "number",
                            "description": "The total number of AVS opted by the AVS operator",
                            "example": 10
                          },
                          "tvl": {
                            "type": "object",
                            "properties": {
                              "tvl": {
                                "type": "number",
                                "description": "The combined TVL of all restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlBeaconChain": {
                                "type": "number",
                                "description": "The TVL of Beacon Chain restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlRestaking": {
                                "type": "number",
                                "description": "The combined TVL of all liquid restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlWETH": {
                                "type": "number",
                                "description": "The TVL of WETH restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlStrategies": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in its native token",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              },
                              "tvlStrategiesEth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in ETH",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              }
                            },
                            "required": [
                              "tvl",
                              "tvlBeaconChain",
                              "tvlRestaking",
                              "tvlWETH",
                              "tvlStrategies",
                              "tvlStrategiesEth"
                            ],
                            "description": "The total value locked (TVL) in the AVS operator",
                            "example": {
                              "tvl": 1000000,
                              "tvlBeaconChain": 1000000,
                              "tvlWETH": 1000000,
                              "tvlRestaking": 1000000,
                              "tvlStrategies": {
                                "Eigen": 1000000,
                                "cbETH": 2000000
                              },
                              "tvlStrategiesEth": {
                                "stETH": 1000000,
                                "cbETH": 2000000
                              }
                            }
                          }
                        },
                        "required": [
                          "address",
                          "metadataName",
                          "metadataDescription",
                          "metadataDiscord",
                          "metadataLogo",
                          "metadataTelegram",
                          "metadataWebsite",
                          "metadataX",
                          "createdAtBlock",
                          "updatedAtBlock",
                          "createdAt",
                          "updatedAt",
                          "shares",
                          "totalStakers",
                          "totalAvs"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/operators/{address}": {
      "get": {
        "operationId": "getOperatorByAddress",
        "summary": "Retrieve an operator by address",
        "description": "Returns an operator record by address.",
        "tags": [
          "Operators"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the operator",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the operator",
              "example": "0x00107cfdeaddc0a3160ed2f6fedd627f313e7b1a"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record of the requested operator.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "description": "The contract address of the AVS operator",
                      "example": "0x09e6eb09213bdd3698bd8afb43ec3cb0ecff683a"
                    },
                    "metadataName": {
                      "type": "string",
                      "description": "The name of the AVS operator",
                      "example": "Example AVS Operator"
                    },
                    "metadataDescription": {
                      "type": "string",
                      "nullable": true,
                      "description": "The description of the AVS operator",
                      "example": "This is an example AVS operator"
                    },
                    "metadataDiscord": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS operator's Discord server",
                      "example": "https://discord.com/invite/abcdefghij"
                    },
                    "metadataLogo": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS operator's logo"
                    },
                    "metadataTelegram": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS operator's Telegram channel",
                      "example": "https://t.me/acme"
                    },
                    "metadataWebsite": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS operator's website",
                      "example": "https://acme.com"
                    },
                    "metadataX": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "description": "The URL of the AVS operator's X",
                      "example": "https://twitter.com/acme"
                    },
                    "createdAtBlock": {
                      "type": "string",
                      "description": "The block number at which the AVS Operator was registered",
                      "example": "19631203"
                    },
                    "updatedAtBlock": {
                      "type": "string",
                      "description": "The block number at which the AVS Operator registration was last updated",
                      "example": "19631203"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The time stamp at which the AVS Operator was registered",
                      "example": "2024-04-11T08:31:11.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The time stamp at which the AVS Operator registration was last updated",
                      "example": "2024-04-11T08:31:11.000Z"
                    },
                    "shares": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategyAddress": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the restaking strategy",
                            "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                          },
                          "shares": {
                            "type": "string",
                            "description": "The amount of shares held in the strategy",
                            "example": "1277920000000000000000000"
                          }
                        },
                        "required": [
                          "strategyAddress",
                          "shares"
                        ]
                      },
                      "description": "The strategy shares held in the AVS operator",
                      "example": [
                        {
                          "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                          "shares": "135064894598947935263152"
                        },
                        {
                          "strategyAddress": "0x54945180db7943c0ed0fee7edab2bd24620256bc",
                          "shares": "9323641881708650182301"
                        }
                      ]
                    },
                    "totalStakers": {
                      "type": "number",
                      "description": "The total number of stakers who have delegated to this AVS operator",
                      "example": 10
                    },
                    "totalAvs": {
                      "type": "number",
                      "description": "The total number of AVS opted by the AVS operator",
                      "example": 10
                    },
                    "tvl": {
                      "type": "object",
                      "properties": {
                        "tvl": {
                          "type": "number",
                          "description": "The combined TVL of all restaking strategies in ETH",
                          "example": 1000000
                        },
                        "tvlBeaconChain": {
                          "type": "number",
                          "description": "The TVL of Beacon Chain restaking strategy in ETH",
                          "example": 1000000
                        },
                        "tvlRestaking": {
                          "type": "number",
                          "description": "The combined TVL of all liquid restaking strategies in ETH",
                          "example": 1000000
                        },
                        "tvlWETH": {
                          "type": "number",
                          "description": "The TVL of WETH restaking strategy in ETH",
                          "example": 1000000
                        },
                        "tvlStrategies": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number",
                            "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                            "example": 1000000
                          },
                          "description": "The TVL of each individual restaking strategy in its native token",
                          "example": {
                            "Eigen": 1000000,
                            "cbETH": 2000000
                          }
                        },
                        "tvlStrategiesEth": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number",
                            "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                            "example": 1000000
                          },
                          "description": "The TVL of each individual restaking strategy in ETH",
                          "example": {
                            "Eigen": 1000000,
                            "cbETH": 2000000
                          }
                        }
                      },
                      "required": [
                        "tvl",
                        "tvlBeaconChain",
                        "tvlRestaking",
                        "tvlWETH",
                        "tvlStrategies",
                        "tvlStrategiesEth"
                      ],
                      "description": "The total value locked (TVL) in the AVS operator",
                      "example": {
                        "tvl": 1000000,
                        "tvlBeaconChain": 1000000,
                        "tvlWETH": 1000000,
                        "tvlRestaking": 1000000,
                        "tvlStrategies": {
                          "Eigen": 1000000,
                          "cbETH": 2000000
                        },
                        "tvlStrategiesEth": {
                          "stETH": 1000000,
                          "cbETH": 2000000
                        }
                      }
                    }
                  },
                  "required": [
                    "address",
                    "metadataName",
                    "metadataDescription",
                    "metadataDiscord",
                    "metadataLogo",
                    "metadataTelegram",
                    "metadataWebsite",
                    "metadataX",
                    "createdAtBlock",
                    "updatedAtBlock",
                    "createdAt",
                    "updatedAt",
                    "shares",
                    "totalStakers",
                    "totalAvs"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/withdrawals": {
      "get": {
        "operationId": "getAllWithdrawals",
        "summary": "Retrieve all withdrawals",
        "description": "Returns all withdrawal data, including the withdrawal root, nonce, withdrawal status, and other relevant information.",
        "tags": [
          "Withdrawals"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "stakerAddress",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
            }
          },
          {
            "in": "query",
            "name": "delegatedTo",
            "description": "The address of the operator to which the stake is delegated",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the operator to which the stake is delegated",
              "example": "0x5accc90436492f24e6af278569691e2c942a676d"
            }
          },
          {
            "in": "query",
            "name": "strategyAddress",
            "description": "The contract address of the restaking strategy",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The contract address of the restaking strategy",
              "example": "0x0fe4f44bee93503346a3ac9ee5a26b130a5796d6"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "The status of the withdrawal",
            "schema": {
              "type": "string",
              "enum": [
                "queued",
                "queued_withdrawable",
                "completed"
              ],
              "description": "The status of the withdrawal",
              "example": "queued"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of withdrawals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "withdrawalRoot": {
                            "type": "string",
                            "description": "The root hash of the withdrawal",
                            "example": "0x9e6728ef0a8ad6009107a886047aae35bc5ed7deaa68580b0d1f8f67e3e5ed31"
                          },
                          "nonce": {
                            "type": "number",
                            "description": "The nonce of the withdrawal",
                            "example": 0
                          },
                          "stakerAddress": {
                            "type": "string",
                            "description": "The address of the staker",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "delegatedTo": {
                            "type": "string",
                            "description": "The operator address to which staking is delegated",
                            "example": "0x0000000000000000000000000000000000000000"
                          },
                          "withdrawerAddress": {
                            "type": "string",
                            "description": "The address of the withdrawer",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The list of strategy shares",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "1000288824523326631"
                              }
                            ]
                          },
                          "createdAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was recorded by EigenExplorer",
                            "example": 19912470
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                            "example": "2024-07-07T23:53:35.000Z"
                          },
                          "updatedAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was last updated",
                            "example": 19912470
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was last updated",
                            "example": "2024-07-07T23:53:35.000Z"
                          },
                          "isCompleted": {
                            "type": "boolean",
                            "description": "Indicates if the withdrawal is completed",
                            "example": false
                          }
                        },
                        "required": [
                          "withdrawalRoot",
                          "nonce",
                          "stakerAddress",
                          "delegatedTo",
                          "withdrawerAddress",
                          "shares",
                          "createdAtBlock",
                          "createdAt",
                          "updatedAtBlock",
                          "updatedAt",
                          "isCompleted"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/withdrawals/{withdrawalRoot}": {
      "get": {
        "operationId": "getWithdrawalByWithdrawalRoot",
        "summary": "Retrieve withdrawal by withdrawal root",
        "description": "Returns the withdrawal data by withdrawal root.",
        "tags": [
          "Withdrawals"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "withdrawalRoot",
            "description": "The root hash of the withdrawal",
            "schema": {
              "type": "string",
              "description": "The root hash of the withdrawal",
              "example": "0x9e6728ef0a8ad6009107a886047aae35bc5ed7deaa68580b0d1f8f67e3e5ed31"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The requested withdrawal record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "withdrawalRoot": {
                      "type": "string",
                      "description": "The root hash of the withdrawal",
                      "example": "0x9e6728ef0a8ad6009107a886047aae35bc5ed7deaa68580b0d1f8f67e3e5ed31"
                    },
                    "nonce": {
                      "type": "number",
                      "description": "The nonce of the withdrawal",
                      "example": 0
                    },
                    "stakerAddress": {
                      "type": "string",
                      "description": "The address of the staker",
                      "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                    },
                    "delegatedTo": {
                      "type": "string",
                      "description": "The operator address to which staking is delegated",
                      "example": "0x0000000000000000000000000000000000000000"
                    },
                    "withdrawerAddress": {
                      "type": "string",
                      "description": "The address of the withdrawer",
                      "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                    },
                    "shares": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategyAddress": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the restaking strategy",
                            "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                          },
                          "shares": {
                            "type": "string",
                            "description": "The amount of shares held in the strategy",
                            "example": "1277920000000000000000000"
                          }
                        },
                        "required": [
                          "strategyAddress",
                          "shares"
                        ]
                      },
                      "description": "The list of strategy shares",
                      "example": [
                        {
                          "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                          "shares": "1000288824523326631"
                        }
                      ]
                    },
                    "createdAtBlock": {
                      "type": "number",
                      "description": "The block number when the withdrawal was recorded by EigenExplorer",
                      "example": 19912470
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                      "example": "2024-07-07T23:53:35.000Z"
                    },
                    "updatedAtBlock": {
                      "type": "number",
                      "description": "The block number when the withdrawal was last updated",
                      "example": 19912470
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The time stamp when the withdrawal was last updated",
                      "example": "2024-07-07T23:53:35.000Z"
                    },
                    "isCompleted": {
                      "type": "boolean",
                      "description": "Indicates if the withdrawal is completed",
                      "example": false
                    }
                  },
                  "required": [
                    "withdrawalRoot",
                    "nonce",
                    "stakerAddress",
                    "delegatedTo",
                    "withdrawerAddress",
                    "shares",
                    "createdAtBlock",
                    "createdAt",
                    "updatedAtBlock",
                    "updatedAt",
                    "isCompleted"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers": {
      "get": {
        "operationId": "getAllStakers",
        "summary": "Retrieve all stakers",
        "description": "Returns all staker records. This endpoint supports pagination.",
        "tags": [
          "Stakers"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of staker records.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the staker",
                            "example": "0x0000006c21964af0d420af8992851a30fa13a68b"
                          },
                          "operatorAddress": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The address of the operator",
                            "example": "0x71c6f7ed8c2d4925d0baf16f6a85bb1736d412eb"
                          },
                          "createdAtBlock": {
                            "type": "string",
                            "description": "The block number at which the Staker made first delegation",
                            "example": "19631203"
                          },
                          "updatedAtBlock": {
                            "type": "string",
                            "description": "The block number at which the Staker made last delegation",
                            "example": "19631203"
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp at which the Staker made first delegation",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp at which the Staker made last delegation",
                            "example": "2024-04-11T08:31:11.000Z"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564a"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "40888428658906049"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            }
                          },
                          "tvl": {
                            "type": "object",
                            "properties": {
                              "tvl": {
                                "type": "number",
                                "description": "The combined TVL of all restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlBeaconChain": {
                                "type": "number",
                                "description": "The TVL of Beacon Chain restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlRestaking": {
                                "type": "number",
                                "description": "The combined TVL of all liquid restaking strategies in ETH",
                                "example": 1000000
                              },
                              "tvlWETH": {
                                "type": "number",
                                "description": "The TVL of WETH restaking strategy in ETH",
                                "example": 1000000
                              },
                              "tvlStrategies": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in its native token",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              },
                              "tvlStrategiesEth": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "number",
                                  "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                                  "example": 1000000
                                },
                                "description": "The TVL of each individual restaking strategy in ETH",
                                "example": {
                                  "Eigen": 1000000,
                                  "cbETH": 2000000
                                }
                              }
                            },
                            "required": [
                              "tvl",
                              "tvlBeaconChain",
                              "tvlRestaking",
                              "tvlWETH",
                              "tvlStrategies",
                              "tvlStrategiesEth"
                            ],
                            "description": "The total value locked (TVL) in the AVS staker",
                            "example": {
                              "tvl": 1000000,
                              "tvlBeaconChain": 1000000,
                              "tvlWETH": 1000000,
                              "tvlRestaking": 1000000,
                              "tvlStrategies": {
                                "Eigen": 1000000,
                                "cbETH": 2000000
                              },
                              "tvlStrategiesEth": {
                                "stETH": 1000000,
                                "cbETH": 2000000
                              }
                            }
                          }
                        },
                        "required": [
                          "address",
                          "operatorAddress",
                          "createdAtBlock",
                          "updatedAtBlock",
                          "createdAt",
                          "updatedAt",
                          "shares"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers/{address}": {
      "get": {
        "operationId": "getStakerByAddress",
        "summary": "Retrieve a staker by address",
        "description": "Returns a staker record by address.",
        "tags": [
          "Stakers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x9791fdb4e9c0495efc5a1f3f9271ef226251eb34"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "withTvl",
            "description": "Toggle whether the route should calculate the TVL from shares",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "description": "Toggle whether the route should calculate the TVL from shares",
              "example": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The record of the requested operator.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "description": "The contract address of the staker",
                      "example": "0x0000006c21964af0d420af8992851a30fa13a68b"
                    },
                    "operatorAddress": {
                      "type": "string",
                      "pattern": "^0x[a-fA-F0-9]{40}$",
                      "description": "The address of the operator",
                      "example": "0x71c6f7ed8c2d4925d0baf16f6a85bb1736d412eb"
                    },
                    "createdAtBlock": {
                      "type": "string",
                      "description": "The block number at which the Staker made first delegation",
                      "example": "19631203"
                    },
                    "updatedAtBlock": {
                      "type": "string",
                      "description": "The block number at which the Staker made last delegation",
                      "example": "19631203"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The time stamp at which the Staker made first delegation",
                      "example": "2024-04-11T08:31:11.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "The time stamp at which the Staker made last delegation",
                      "example": "2024-04-11T08:31:11.000Z"
                    },
                    "shares": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "strategyAddress": {
                            "type": "string",
                            "pattern": "^0x[a-fA-F0-9]{40}$",
                            "description": "The contract address of the restaking strategy",
                            "example": "0x93c4b944d05dfe6df7645a86cd2206016c51564a"
                          },
                          "shares": {
                            "type": "string",
                            "description": "The amount of shares held in the strategy",
                            "example": "40888428658906049"
                          }
                        },
                        "required": [
                          "strategyAddress",
                          "shares"
                        ]
                      }
                    },
                    "tvl": {
                      "type": "object",
                      "properties": {
                        "tvl": {
                          "type": "number",
                          "description": "The combined TVL of all restaking strategies in ETH",
                          "example": 1000000
                        },
                        "tvlBeaconChain": {
                          "type": "number",
                          "description": "The TVL of Beacon Chain restaking strategy in ETH",
                          "example": 1000000
                        },
                        "tvlRestaking": {
                          "type": "number",
                          "description": "The combined TVL of all liquid restaking strategies in ETH",
                          "example": 1000000
                        },
                        "tvlWETH": {
                          "type": "number",
                          "description": "The TVL of WETH restaking strategy in ETH",
                          "example": 1000000
                        },
                        "tvlStrategies": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number",
                            "description": "The total value locked (TVL) in the strategy, denominated in the strategy's native token",
                            "example": 1000000
                          },
                          "description": "The TVL of each individual restaking strategy in its native token",
                          "example": {
                            "Eigen": 1000000,
                            "cbETH": 2000000
                          }
                        },
                        "tvlStrategiesEth": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number",
                            "description": "The total value locked (TVL) in the strategy, denominated in ETH",
                            "example": 1000000
                          },
                          "description": "The TVL of each individual restaking strategy in ETH",
                          "example": {
                            "Eigen": 1000000,
                            "cbETH": 2000000
                          }
                        }
                      },
                      "required": [
                        "tvl",
                        "tvlBeaconChain",
                        "tvlRestaking",
                        "tvlWETH",
                        "tvlStrategies",
                        "tvlStrategiesEth"
                      ],
                      "description": "The total value locked (TVL) in the AVS staker",
                      "example": {
                        "tvl": 1000000,
                        "tvlBeaconChain": 1000000,
                        "tvlWETH": 1000000,
                        "tvlRestaking": 1000000,
                        "tvlStrategies": {
                          "Eigen": 1000000,
                          "cbETH": 2000000
                        },
                        "tvlStrategiesEth": {
                          "stETH": 1000000,
                          "cbETH": 2000000
                        }
                      }
                    }
                  },
                  "required": [
                    "address",
                    "operatorAddress",
                    "createdAtBlock",
                    "updatedAtBlock",
                    "createdAt",
                    "updatedAt",
                    "shares"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers/{address}/withdrawals": {
      "get": {
        "operationId": "getStakerWithdrawals",
        "summary": "Retrieve all withdrawals by staker address",
        "description": "Returns all withdrawal data of the requested staker, including the withdrawal root, nonce, withdrawal status, and other relevant information.",
        "tags": [
          "Stakers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x9791fdb4e9c0495efc5a1f3f9271ef226251eb34"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of withdrawals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "withdrawalRoot": {
                            "type": "string",
                            "description": "The root hash of the withdrawal",
                            "example": "0x9e6728ef0a8ad6009107a886047aae35bc5ed7deaa68580b0d1f8f67e3e5ed31"
                          },
                          "nonce": {
                            "type": "number",
                            "description": "The nonce of the withdrawal",
                            "example": 0
                          },
                          "stakerAddress": {
                            "type": "string",
                            "description": "The address of the staker",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "delegatedTo": {
                            "type": "string",
                            "description": "The operator address to which staking is delegated",
                            "example": "0x0000000000000000000000000000000000000000"
                          },
                          "withdrawerAddress": {
                            "type": "string",
                            "description": "The address of the withdrawer",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The list of strategy shares",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "1000288824523326631"
                              }
                            ]
                          },
                          "createdAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was recorded by EigenExplorer",
                            "example": 19912470
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                            "example": "2024-07-07T23:53:35.000Z"
                          },
                          "updatedAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was last updated",
                            "example": 19912470
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was last updated",
                            "example": "2024-07-07T23:53:35.000Z"
                          },
                          "isCompleted": {
                            "type": "boolean",
                            "description": "Indicates if the withdrawal is completed",
                            "example": false
                          }
                        },
                        "required": [
                          "withdrawalRoot",
                          "nonce",
                          "stakerAddress",
                          "delegatedTo",
                          "withdrawerAddress",
                          "shares",
                          "createdAtBlock",
                          "createdAt",
                          "updatedAtBlock",
                          "updatedAt",
                          "isCompleted"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers/{address}/withdrawals/queued": {
      "get": {
        "operationId": "getQueuedStakerWithdrawals",
        "summary": "Retrieve queued withdrawals by staker address",
        "description": "Returns all queued withdrawal data of the requested staker.",
        "tags": [
          "Stakers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x9791fdb4e9c0495efc5a1f3f9271ef226251eb34"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of queued withdrawals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "withdrawalRoot": {
                            "type": "string",
                            "description": "The root hash of the withdrawal",
                            "example": "0x9e6728ef0a8ad6009107a886047aae35bc5ed7deaa68580b0d1f8f67e3e5ed31"
                          },
                          "nonce": {
                            "type": "number",
                            "description": "The nonce of the withdrawal",
                            "example": 0
                          },
                          "stakerAddress": {
                            "type": "string",
                            "description": "The address of the staker",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "delegatedTo": {
                            "type": "string",
                            "description": "The operator address to which staking is delegated",
                            "example": "0x0000000000000000000000000000000000000000"
                          },
                          "withdrawerAddress": {
                            "type": "string",
                            "description": "The address of the withdrawer",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The list of strategy shares",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "1000288824523326631"
                              }
                            ]
                          },
                          "createdAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was recorded by EigenExplorer",
                            "example": 19912470
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                            "example": "2024-07-07T23:53:35.000Z"
                          }
                        },
                        "required": [
                          "withdrawalRoot",
                          "nonce",
                          "stakerAddress",
                          "delegatedTo",
                          "withdrawerAddress",
                          "shares",
                          "createdAtBlock",
                          "createdAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers/{address}/withdrawals/queued_withdrawable": {
      "get": {
        "operationId": "getQueuedWithdrawableStakerWithdrawals",
        "summary": "Retrieve queued and withdrawable withdrawals by staker address",
        "description": "Returns all queued and withdrawable withdrawal data of the requested staker.",
        "tags": [
          "Stakers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x9791fdb4e9c0495efc5a1f3f9271ef226251eb34"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of queued and withdrawable withdrawals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "withdrawalRoot": {
                            "type": "string",
                            "description": "The root hash of the withdrawal",
                            "example": "0x9e6728ef0a8ad6009107a886047aae35bc5ed7deaa68580b0d1f8f67e3e5ed31"
                          },
                          "nonce": {
                            "type": "number",
                            "description": "The nonce of the withdrawal",
                            "example": 0
                          },
                          "stakerAddress": {
                            "type": "string",
                            "description": "The address of the staker",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "delegatedTo": {
                            "type": "string",
                            "description": "The operator address to which staking is delegated",
                            "example": "0x0000000000000000000000000000000000000000"
                          },
                          "withdrawerAddress": {
                            "type": "string",
                            "description": "The address of the withdrawer",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The list of strategy shares",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "1000288824523326631"
                              }
                            ]
                          },
                          "createdAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was recorded by EigenExplorer",
                            "example": 19912470
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                            "example": "2024-07-07T23:53:35.000Z"
                          }
                        },
                        "required": [
                          "withdrawalRoot",
                          "nonce",
                          "stakerAddress",
                          "delegatedTo",
                          "withdrawerAddress",
                          "shares",
                          "createdAtBlock",
                          "createdAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers/{address}/withdrawals/completed": {
      "get": {
        "operationId": "getCompletedStakerWithdrawals",
        "summary": "Retrieve completed withdrawals by staker address",
        "description": "Returns all completed withdrawal data of the requested staker.",
        "tags": [
          "Stakers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x9791fdb4e9c0495efc5a1f3f9271ef226251eb34"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of completed withdrawals.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "withdrawalRoot": {
                            "type": "string",
                            "description": "The root hash of the withdrawal",
                            "example": "0x9e6728ef0a8ad6009107a886047aae35bc5ed7deaa68580b0d1f8f67e3e5ed31"
                          },
                          "nonce": {
                            "type": "number",
                            "description": "The nonce of the withdrawal",
                            "example": 0
                          },
                          "stakerAddress": {
                            "type": "string",
                            "description": "The address of the staker",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "delegatedTo": {
                            "type": "string",
                            "description": "The operator address to which staking is delegated",
                            "example": "0x0000000000000000000000000000000000000000"
                          },
                          "withdrawerAddress": {
                            "type": "string",
                            "description": "The address of the withdrawer",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "shares": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "strategyAddress": {
                                  "type": "string",
                                  "pattern": "^0x[a-fA-F0-9]{40}$",
                                  "description": "The contract address of the restaking strategy",
                                  "example": "0xbeac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0"
                                },
                                "shares": {
                                  "type": "string",
                                  "description": "The amount of shares held in the strategy",
                                  "example": "1277920000000000000000000"
                                }
                              },
                              "required": [
                                "strategyAddress",
                                "shares"
                              ]
                            },
                            "description": "The list of strategy shares",
                            "example": [
                              {
                                "strategyAddress": "0x93c4b944d05dfe6df7645a86cd2206016c51564d",
                                "shares": "1000288824523326631"
                              }
                            ]
                          },
                          "createdAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was recorded by EigenExplorer",
                            "example": 19912470
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                            "example": "2024-07-07T23:53:35.000Z"
                          },
                          "updatedAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was last updated",
                            "example": 19912470
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was last updated",
                            "example": "2024-07-07T23:53:35.000Z"
                          }
                        },
                        "required": [
                          "withdrawalRoot",
                          "nonce",
                          "stakerAddress",
                          "delegatedTo",
                          "withdrawerAddress",
                          "shares",
                          "createdAtBlock",
                          "createdAt",
                          "updatedAtBlock",
                          "updatedAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/stakers/{address}/deposits": {
      "get": {
        "operationId": "getStakerDeposits",
        "summary": "Retrieve all deposits by staker address",
        "description": "Returns all deposit data of the requested staker, including the transaction hash, token address, strategy address, shares and other relevant information.",
        "tags": [
          "Stakers"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x9791fdb4e9c0495efc5a1f3f9271ef226251eb34"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of deposits.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionHash": {
                            "type": "string",
                            "description": "The hash of the transaction",
                            "example": "0x9d0a355df5a937516dfaed6721b0b461a16b8fad005f66d7dbf56b8a39136297"
                          },
                          "stakerAddress": {
                            "type": "string",
                            "description": "The address of the staker",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "tokenAddress": {
                            "type": "string",
                            "description": "The address of the token",
                            "example": "0xe95a203b1a91a908f9b9ce46459d101078c2c3cb"
                          },
                          "strategyAddress": {
                            "type": "string",
                            "description": "The contract address of the restaking strategy",
                            "example": "0x0fe4f44bee93503346a3ac9ee5a26b130a5796d6"
                          },
                          "shares": {
                            "type": "string",
                            "description": "The amount of shares held in the strategy",
                            "example": "40888428658906049"
                          },
                          "createdAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was recorded by EigenExplorer",
                            "example": 19912470
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                            "example": "2024-07-07T23:53:35.000Z"
                          }
                        },
                        "required": [
                          "transactionHash",
                          "stakerAddress",
                          "tokenAddress",
                          "strategyAddress",
                          "shares",
                          "createdAtBlock",
                          "createdAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/deposits": {
      "get": {
        "operationId": "getAllDeposits",
        "summary": "Retrieve all deposits",
        "description": "Returns all deposit data, including the transaction hash, token address, and other relevant information.",
        "tags": [
          "Deposits"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "The number of records to skip for pagination",
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The number of records to skip for pagination",
              "example": 0
            }
          },
          {
            "in": "query",
            "name": "take",
            "description": "The number of records to return for pagination",
            "schema": {
              "type": "string",
              "default": "12",
              "description": "The number of records to return for pagination",
              "example": 12
            }
          },
          {
            "in": "query",
            "name": "stakerAddress",
            "description": "The address of the staker",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the staker",
              "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
            }
          },
          {
            "in": "query",
            "name": "tokenAddress",
            "description": "The address of the token deposited",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The address of the token deposited",
              "example": "0xe95a203b1a91a908f9b9ce46459d101078c2c3cb"
            }
          },
          {
            "in": "query",
            "name": "strategyAddress",
            "description": "The contract address of the restaking strategy",
            "schema": {
              "type": "string",
              "pattern": "^0x[a-fA-F0-9]{40}$",
              "description": "The contract address of the restaking strategy",
              "example": "0x0fe4f44bee93503346a3ac9ee5a26b130a5796d6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of deposits.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "transactionHash": {
                            "type": "string",
                            "description": "The hash of the transaction",
                            "example": "0x9d0a355df5a937516dfaed6721b0b461a16b8fad005f66d7dbf56b8a39136297"
                          },
                          "stakerAddress": {
                            "type": "string",
                            "description": "The address of the staker",
                            "example": "0x74ede5f75247fbdb9266d2b3a7be63b3db7611dd"
                          },
                          "tokenAddress": {
                            "type": "string",
                            "description": "The address of the token",
                            "example": "0xe95a203b1a91a908f9b9ce46459d101078c2c3cb"
                          },
                          "strategyAddress": {
                            "type": "string",
                            "description": "The contract address of the restaking strategy",
                            "example": "0x0fe4f44bee93503346a3ac9ee5a26b130a5796d6"
                          },
                          "shares": {
                            "type": "string",
                            "description": "The amount of shares held in the strategy",
                            "example": "40888428658906049"
                          },
                          "createdAtBlock": {
                            "type": "number",
                            "description": "The block number when the withdrawal was recorded by EigenExplorer",
                            "example": 19912470
                          },
                          "createdAt": {
                            "type": "string",
                            "description": "The time stamp when the withdrawal was recorded by EigenExplorer",
                            "example": "2024-07-07T23:53:35.000Z"
                          }
                        },
                        "required": [
                          "transactionHash",
                          "stakerAddress",
                          "tokenAddress",
                          "strategyAddress",
                          "shares",
                          "createdAtBlock",
                          "createdAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "description": "Total number of records in the database",
                          "example": 30
                        },
                        "skip": {
                          "type": "number",
                          "description": "The number of skiped records for this query",
                          "example": 0
                        },
                        "take": {
                          "type": "number",
                          "description": "The number of records returned for this query",
                          "example": 12
                        }
                      },
                      "required": [
                        "total",
                        "skip",
                        "take"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "422": {
            "$ref": "#/components/responses/422"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "400": {
        "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_request"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "bad_request"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.eigenexplorer.com/api-reference/errors#bad_request"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "401": {
        "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unauthorized"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unauthorized"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.eigenexplorer.com/api-reference/errors#unauthorized"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "403": {
        "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "forbidden"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "forbidden"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.eigenexplorer.com/api-reference/errors#forbidden"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "404": {
        "description": "The server cannot find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "not_found"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "not_found"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.eigenexplorer.com/api-reference/errors#not_found"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "422": {
        "description": "The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unprocessable_entity"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unprocessable_entity"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.eigenexplorer.com/api-reference/errors#unprocessable_entity"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "429": {
        "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "rate_limit_exceeded"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "rate_limit_exceeded"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.eigenexplorer.com/api-reference/errors#rate_limit_exceeded"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "500": {
        "description": "The server has encountered a situation it does not know how to handle.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "internal_server_error"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "internal_server_error"
                    },
                    "message": {
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.eigenexplorer.com/api-reference/errors#internal_server_error"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      }
    }
  }
}